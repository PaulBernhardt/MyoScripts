scriptId = 'com.undercoveryeti.myo.slideshow'
scriptTitle = "Slide Show"
scriptDetailsUrl = "https://market.myo.com/app/54a489b8e4b0616d7c6934ef"
description = [[
Conrol slide shows with your Myo! Works with Picasa and Windows Photo viewer

Controls:
- Wave left/right to go back/previous
- Fist to grab, roll left right to zoom in/out
- Fingers spread to start slideshow (or star a photo in Picasa)

Owner: Paul (PBernhardt@gmail.com)

Known Issues:
- It takes a few seconds for slide show mode to end, so if you finger spread twice you may end up in the wrong state. Just fingers spread more!

]]

function onForegroundWindowChange(app, title)
    --myo.debug("onForegroundWindowChange: " .. app .. ", " .. title)
	local foundApp = false
	if (app == "PicasaPhotoViewer.exe") then
		foundApp = true
		bindings = PICASA_BINDINGS
		appTitle = "Picasa"
	elseif (string.match(title, " - Windows Photo Viewer") ~= nil or string.match(title,"Photo Viewer Slide Show") ~= nil) then
		foundApp = true
		bindings = STANDARD_BINDINGS
		appTitle = "Photo Viewer"
	end
	
    return foundApp
end


function nextPhoto(edge)
    myo.keyboard("right_arrow",edge)
end

function previousPhoto(edge)
     myo.keyboard("left_arrow",edge)
end

function lock(edge)
	if (edge == "down") then
		myo.lock()
	end
end

centreRoll = 0
function grab(edge)
	myo.controlMouse(edge == "down")
	myo.centerMousePosition()
	myo.mouse("left", edge)
	
	if (edge == "down") then
		centreRoll = myo.getRoll()
	else
		centreRoll = 0
	end
end

playState = "f11"
function playPause(edge)
	myo.keyboard(playState, edge)
	if (edge == "up") then
        playState = playState == "f11" and "escape" or "f11"
	end
	--myo.debug("Playstate now " .. playState)
end

function star(edge)
	myo.keyboard("8", edge, "control")
end

ROLL_DEADZONE = .15
function controlZoom()
	if (centreRoll == 0) then
		return
	end
	roll = calculateDeltaRadians(myo.getRoll(), centreRoll)
	if (roll > ROLL_DEADZONE) then
		bindings.zoomOut()
		centreRoll = myo.getRoll()
	elseif (roll < -ROLL_DEADZONE) then
		bindings.zoomIn()
		centreRoll = myo.getRoll()
	end
    
end

function standardZoomIn()
	myo.keyboard("equal", "press", "control")
end

function standardZoomOut()
	myo.keyboard("minus", "press", "control")
end

function picasaZoomIn()
	myo.keyboard("up_arrow", "press")
end

function picasaZoomOut()
	myo.keyboard("down_arrow", "press")
end

 STANDARD_BINDINGS = {
    fist            = grab,
    fingersSpread   = playPause,
    waveOut         = nextPhoto,
    waveIn          = previousPhoto,
	doubleTap       = lock(),
	onPeriodic      = controlZoom,
	zoomIn          = standardZoomIn,
	zoomOut         = standardZoomOut
}

PICASA_BINDINGS = {
    fist            = grab,
    fingersSpread   = star,
    waveOut         = nextPhoto,
    waveIn          = previousPhoto,
	doubleTap       = lock(),
	onPeriodic      = controlZoom,
	zoomIn          = picasaZoomIn,
	zoomOut         = picasaZoomOut
}

bindings = STANDARD_BINDINGS

function conditionallySwapWave(pose)
	if myo.getArm() == "left" then
        if pose == "waveIn" then
            pose = "waveOut"
        elseif pose == "waveOut" then
            pose = "waveIn"
        end
    end
    return pose
end

PI = math.pi
TWOPI = PI * 2
function calculateDeltaRadians(currentYaw, centreYaw)
    local deltaYaw = currentYaw - centreYaw
    
    if (deltaYaw > PI) then
        deltaYaw = deltaYaw - TWOPI
    elseif(deltaYaw < -PI) then
        deltaYaw = deltaYaw + TWOPI
    end
    return deltaYaw
end

function activeAppName()
    return scriptTitle
end

function onPoseEdge(pose, edge)    
    if (pose ~= "rest" and pose ~= "unknown") then
        -- hold if edge is on, timed if edge is off
        myo.unlock(edge == "off" and "timed" or "hold")
    end
    pose = conditionallySwapWave(pose)
    --myo.debug("onPoseEdge: " .. pose .. ": " .. edge)
    local keyEdge = edge == "off" and "up" or "down"
    fn = bindings[pose]
    if fn then
        fn(keyEdge)
    end
end

function onPeriodic()
	fn = bindings["onPeriodic"]
    if fn then
        fn()
    end
end
